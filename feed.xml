<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><atom:link href="//folcon.github.io/" rel="self" type="application/rss+xml"/><title>Alien Brain</title><link>//folcon.github.io/</link><description>Musings</description><lastBuildDate>Fri, 03 Jan 2020 16:11:39 +0000</lastBuildDate><generator>clj-rss</generator><item><guid>//folcon.github.io/posts-output/2019-12-30-playing-with-performance/</guid><link>//folcon.github.io/posts-output/2019-12-30-playing-with-performance/</link><title>Playing with Performance</title><description>Digging into the slowdownsThis is rather fiddilyI reached out to the clojure reddit community and I'm really happy with the response I got back =)...People were super helpful!I managed to go from 34760 ms on the voronoi.edn test file to 608 ms.There's definitely more gains to be had, but there's also some issues on the math side, tinkering with using int primitives like the original delaunator is giving me fun math errors. So that's a can of worms I don't want to open yet.I'd also like to see how far I can get performance-wise without completely turning the code into an unreadable mess.Not that it's far from that at the moment, I definitely need to go back and try and clearly articulate what each part of the lib is doing.Adding in hooks to allow using different distance metrics like manhatten would be pretty cool.</description><pubDate>Mon, 30 Dec 2019 00:00:00 +0000</pubDate></item><item><guid>//folcon.github.io/posts-output/2019-12-28-first-post/</guid><link>//folcon.github.io/posts-output/2019-12-28-first-post/</link><title>A New Release</title><description>Releasing my first proper open source libIt's a portSo I released delaunator-cljc today =)...It's ugly as heck atm, but Iâ€™ve been wanting a half decent implementation in this space that I can wrap my head around =)...I'm really unfamiliar with doing this kind of 2d geometry so I thought I'd spend some of the Christmas break getting more familiar with it.I figured taking an existing library and porting it into clojure-land would be a good starting point.It's surprisingly easy to create bugs in this space, I'm still finding stupid mistakes that I made and everything is much slower than I was expecting it to be.I'll need to spend some time working out how to tinker with performance here.</description><pubDate>Sat, 28 Dec 2019 00:00:00 +0000</pubDate></item></channel></rss>